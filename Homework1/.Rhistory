install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,2.14)
c(1.1,9,3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files())
args(list.files)
old.dir <- (getwd)
old.dir <- getwd()
testdir <- dir.create()
dir.create(testdir)
dir.create()
?dir.create
testdir <- dir.create(old.dir)
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
list.files(mytest.R)
list.files("mytest.R")
list.files()
file.exists()
file.exists("testdr")
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R, mytest2.R")
file.rename(from = "mytest.R", to = "mytest2.R")
file.copy(from = "mytest2.R", to = "mytest3.R")
file.path("mytest3.R")
?find.path
file.path(folder1, folder2)
file.path("folder 1", "folder 2")
file.path("folder 1", "folder2")
info()
??file.path
?file.path
file.path("folder 1", "folder 2", fsep = .Platform$file.sep)
file.path("folder1", fsep = "folder2")
file.path("folder 1", "folder2", fsep = "mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path, showWarnings = TRUE, recursive = TRUE, mode = "0777")
dir.create("file.path("testdir2", "testdir3")", showWarnings = TRUE, recursive = TRUE, mode = "0777")
dir.create("file.path("testdir2", "testdir3"), recursive = TRUE)
dir.create(file.create("testdir2", "testdir3"), recursive = TRUE)
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd(old.dir)
1:20
pi:10
15:1
`:`
?`:`
seq(1,20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seg)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect(0.5, 55, -10, 6)
num_vect <- vector(0.5, 55, -10, 6)
?vector
?num_vect
numeric(0.5, 55, -10, 6)
skip()
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("my", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "jolynde")
my_name
paste(my_name, collapse = "")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste("1:3",c("X", "Y", "Z"), sep = "" )
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0)]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical("vect", "vect2")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c[1:20]
my_vector <- c(1:20)
my_vector <- [1:20]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
==
`==`
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!5 = 7
!(5 = 7)
5 != 7
! 5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 !=8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints < 0)
all(ints > 0)
install.packages("bibliometrix")
library("bibliometrix", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
set.seed(4)
# Create a simple data ( 6 x 6 )
x = matrix(sample(c(1:10, -999), 36, rep = TRUE), nrow = 6)
df <- data.frame(x)
names(df) <- letters[1:6]
df
df$a[df$a== -999] <- NA
fix_missing <- function(x)
x[x== -999] <- NA
fix_missing <- function(x)  {
x[x== -999] <- NA
x
}
df$a <- fix_missing(df$a)
df
set.seed(4)
# Create a simple data ( 6 x 6 )
x = matrix(sample(c(1:10, -999), 36, rep = TRUE), nrow = 6)
df <- data.frame(x)
names(df) <- letters[1:6]
df
# Create a simple data ( 6 x 6 )
x = matrix(sample(c(1:10, -999), 36, rep = TRUE), nrow = 6)
df <- data.frame(x)
names(df) <- letters[1:6]
df
fix_missing <- function(x)  {
x[x== -999] <- NA
x
}
df$a <- fix_missing(df$a)
df
df$a <- fix_missing(df$a)
df$b <- fix_missing(df$b)
df$c <- fix_missing(df$c)
df$d <- fix_missing(df$d)
df$e <- fix_missing(df$e)
df$f <- fix_missing(df$f)
df
# Create a simple data ( 6 x 6 )
x = matrix(sample(c(1:10, -999), 36, rep = TRUE), nrow = 6)
df <- data.frame(x)
names(df) <- letters[1:6]
df
# Create a simple data ( 6 x 6 )
x = matrix(sample(c(1:10, -999), 36, rep = TRUE), nrow = 6)
df <- data.frame(x)
names(df) <- letters[1:6]
df
df[] <- lapply(df , fix_missing)
df
# Construct 5x6 matrix
df1 <- matrix(rnorm(20), nrow = 5, ncol = 4)
df1
?rnorm
apply(df1, 1, sum)
apply(df1, 2, sum)
# 3 dummy matrices
A <- matrix(rnorm(25) , nrow = 5, ncol = 5)
B <- matrix(runif(25), nrow = 5, ncol = 5)
C <- matrix(rnorm(25, mean = 80, sd = 20), nrow = 5, ncol = 5)
C <- matrix(rnorm(25, mean = 80, sd = 20), nrow = 5, ncol = 5)
A
B
C
# Combine into a list
My_list <- list(A,B,C)
My_list
View(My_list)
lapply(My_list, "[" , 1,1) # take first element of each matrix
lapply(My_list, "[" , 1 ) # take first element of each matrix
# Combine into a list
My_list <- list(A,B,C)
My_list
lapply(My_list, "[" , 1 ) # take first element of each matrix
lapply(My_list, "[" , 1 ,) # take first element of each matrix
lapply(My_list, "[" , , 2)
setwd("~/Documents/FYS-STK4155/Homework1")
x = np.random.rand(100,1)
y = 5*x*x+0.1*np.random.randn(100,1)
x = rnorm(100,1)
y = 5*x*x+0.1*rnorm(100,1)
plot(y)
setwd("~/Documents/FYS-STK4155/Homework1")
x = rnorm(100,1)
y = 5*x*x+0.1*rnorm(100,1)
plot(y)
print(y)
y = 5*x*x+0.01*rnorm(100,1)
plot(y)
print(y)
y = 5*x*x+0.1*rnorm(100,1)
plot(y)
print(y)
as.matrix(y)
y
integrate(f,1,T,(1/x))
integrate(f,1,T)
f := 1/x
f = 1/x
f = 1/x
fun = function(x) 1/x
integrate(fun,1,T)
ln(5)
